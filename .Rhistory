if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
iters = 1000
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
iters = 1000
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
iters = 10
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
iters = 10
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
hist(as.numeric(estimates))
vif(lm1)
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
n = 2000
sigma = 2
iters = 10
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
sigma = 2
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
hist(as.numeric(estimates))
sigma = 2
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 1*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[2,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 1*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 1*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
n = 2000
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
n = 200
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
n = 200
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
n = 200
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
n = 200
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
n = 200
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
estimates
mean(as.numeric(estimates))
hist(as.numeric(estimates))
n = 200
sigma = 5
iters = 100
estimates = list()
r2 = list()
for (run in 1:iters){
x1 = runif(min = 0, max = 1, n = n)
x2 = runif(min = 0, max = 1, n = n)
noise = rnorm(mean = 0, sd = sigma, n = n)
y = 10 + 10*x1 + 10*x2 + 10*x1*x2 + noise
lm1 = lm(y ~ x1 + x2 + x1*x2)
s = summary(lm1)
estimates[run] = s$coefficients[4,1]
r2[run] = s$r.squared
if (run == iters){
print(summary(lm1))
}
else {
rm(x1, x2, y, noise, lm1)
}
}
library(car)
vif(lm1)
mean(as.numeric(estimates))
hist(as.numeric(estimates))
mean(as.numeric(r2))
